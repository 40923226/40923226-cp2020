<h1>首頁</h1>
<p></p>
<p></p>
<h1>HW1</h1>
<h2>PCH 9 Networking Overview網路概述</h2>
<p><br/><br/>Network Defined by Geography<span lang="zh-TW">地理定義的網絡</span></p>
<h4>Overview總覽</h4>
<p><span style="color: #000000;">In this module, we are going to cover the various types of networks, including local area networks, wide area networks, personal area networks, and metropolitan area networks.</span></p>
<p><span lang="zh-TW">在本模塊中，我們將涵蓋各種類型的網絡，包括局域網，廣域網，個人局域網和城域網。</span></p>
<p>Next, we will cover the various network relationships, such as client server and peer-to-peer, and focus on the types of resources our networks use.</p>
<p><br/><span lang="zh-TW">接下來，我們將介紹各種網絡關係，例如客戶端服務器和對等網絡，並集中討論網絡使</span><span lang="zh-TW">用的資源類型。</span></p>
<p>Finally, we will talk about the topologies of our networks, such as the bus, the ring, the star, the full mesh, and hybrid network topologies.</p>
<p><span lang="zh-TW">最後，我們將討論網絡的拓撲，例如總線，環形，星形，全網格和混合網絡拓撲。</span></p>
<p></p>
<h3>Network Defined By Geography 地理定義的網絡</h3>
<p>Networks are defined by the geography they cover. We start with the area around a single person, with this area being termed the personal area network (PAN).</p>
<p><span lang="zh-TW">網絡由它們所覆蓋的地理位置定義。我們從一個人周圍的區域開始，將該區域稱為個人區域網絡（PAN）。</span></p>
<p>Next, we expand outward to the local area network (LAN), which can contain an entire office floor or building. Moving outward again, we have the metropolitan area network, which covers the area across the city by connecting multiple LANs together.</p>
<p><span lang="zh-TW">接下來，我們向外擴展到局域網（LAN），該局域網可以包含整個辦公樓層或建築物。再次向外移動，我們有了<br/></span></p>
<p><span lang="zh-TW">城域網，該城域網通過將多個LAN連接在一起而覆蓋了整個城市。</span></p>
<p>Finally, we have the wide area network (WAN). This is the largest network we define by geography and it can go across the country or even across the world.</p>
<p><span lang="zh-TW">最後，我們有廣域網（WAN）。這是我們按地理位置定義的最大網絡，它可以遍及全國，甚至遍及全球。</span></p>
<p>A great example of a WAN is the Internet, since it connects many networks together and stretches across the globe. <br/><span lang="zh-TW">WAN就是一個很好的例子，因為Internet將許多網絡連接在一起並遍及全球。</span></p>
<p style="text-align: center;"><span class="image"><img class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image1.png"/></span><span class="caption" lang=""></span></p>
<p id="N106B1" lang="" style="text-align: center;">Geographic networks. Image used under CC-BY license from<span> </span><a href="http://www.jasondion.com/" id="_i_1" lang="" target="_blank">Jason Dion</a>.</p>
<h4>Personal Area Network個人區域網</h4>
<p>A PAN has a very small range limited to just a few meters. If you stretch your hands out at your sides and spin around in a circle, this is the physical range of most PANs.</p>
<p><span lang="zh-TW">PAN的範圍很小，只有幾米。如果您將雙手伸向兩側並轉一圈，則這是大多數PAN的物理範圍。</span></p>
<p>Bluetooth is one of the main things we use to create a PAN, although USB and infrared can also be used for these networks.</p>
<p><span lang="zh-TW">藍牙是我們用於創建PAN的主要內容之一，儘管USB和紅外也可以用於這些網絡。</span></p>
<p>Bluetooth has a range between one meter and 100 meters depending on which class of Bluetooth you are using, but most common Bluetooth devices are class two devices limited to 10 meters.</p>
<p><span lang="zh-TW">藍牙的範圍在1米至100米之間，具體取決於您使用的藍牙類別，但是大多數常見的藍牙設備是限於10米的第二</span><span lang="zh-TW">類設備。</span></p>
<p>Some good examples of PANs are the connection between a USB hard drive and a laptop, or a Bluetooth cellphone connecting to your car stereo system wirelessly.</p>
<p><span lang="zh-TW">PAN的一些很好的例子是USB硬盤驅動器和筆記本電腦之間的連接，或是無線連接到汽車立體聲系統的藍牙手機。</span></p>
<h4>Local Area Network 局域網</h4>
<p>The next type of network defined by geography is the LAN, which stands for local area network. The local area network is comprised of several devices that allow computers to connect to each other within a small geographic area.</p>
<p><span lang="zh-TW">地理定義的下一種網絡類型是LAN，它代表局域網。局域網由幾個設備組成，這些設備使計算機可以在一個較小</span><span lang="zh-TW">的地理區域內相互連接。</span></p>
<p>A LAN is, at its most basic, a connection of several workstations together using a hub, switch, or wireless access point. LANs have a limited distance associated with them, with each network segment usually limited to 100 meters or less.</p>
<p><span lang="zh-TW">局域網最基本的是使用集線器，交換機或無線訪問點將多個工作站連接在一起。局域網的距離有限，每個網段</span><span lang="zh-TW">通常限制在100米或更短。</span></p>
<p>Generally, a LAN is used to network the floor of an office, or possibly the entire office building in smaller networks. LANs are generally connected in either a wired or wireless manner.</p>
<p><span lang="zh-TW">通常，LAN用於將辦公室地板或較小網絡中的整個辦公樓聯網。 LAN通常以有線或無線方式連接。</span></p>
<p>If wired, they are connected using unshielded twisted pair cable using the Ethernet (IEEE 802.3) standard; if wireless, they are connected using Wi-Fi radio signal (IEEE 802.11) standards.</p>
<p><span lang="zh-TW">如果已連接，則使用符合以太網（IEEE 802.3）標準的非屏蔽雙絞線電纜進行連接。如果為無線，則它們使用</span><span lang="zh-TW">Wi-Fi無線電信號（IEEE 802.11）標准進行連接。</span> <br/><span title="Quick scroll up"></span> <span title="Quick scroll up"></span></p>
<div class="imagewrap" style="text-align: center;"><span class="image"><img class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image2.png"/></span>
<p lang="" style="text-align: center;">Simple LAN diagram. Public domain image obtained from<span> </span><a href="https://commons.wikimedia.org/wiki/File:Gwiazda.jpeg#/media/File:Gwiazda.jpeg" id="_i_3" lang="" target="_blank">Wierzbadark</a>.</p>
</div>
<div class="imagewrap" style="text-align: center;"><span class="image"><img class="popimg" id="_i_4" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image3.jpeg"/></span>
<p id="N10720" lang="" style="text-align: center;">Caption. Complex LAN diagram. Used with permission. Copyright:<span> </span><a href="http://www.123rf.com/profile_ohmega1982" id="_i_5" lang="" target="_blank">ohmega 1982/123 RF Stock Photo</a>.</p>
</div>
<h4>Mrtropolitan Aera Networks城域網</h4>
<p>Another way we can geographically define our networks is as a MAN. A metropolitan area network connects scattered locations across the city or county.</p>
<p><span lang="zh-TW">我們可以在地理上定義網絡的另一種方法是將其作為MAN。城域網連接整個城市或縣的分散位置。</span></p>
<p>This covers a larger geographical area than a local area network, but also a much smaller area than a wide-area network.</p>
<p><span lang="zh-TW">這比局域網覆蓋更大的地理區域，但是比廣域網覆蓋的區域小得多。</span></p>
<p style="text-align: center;"><span class="image"><img class="popimg" id="_i_6" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image13.jpeg"/></span><span class="caption" lang=""></span></p>
<p id="N10776" lang="" style="text-align: center;">MAN diagram. Image used under CC-BY-SA license from<span> </span><a href="https://flic.kr/p/beT3r4" id="_i_7" lang="" target="_blank">Greta Bynum</a>.</p>
<h4>Wide Area Networks廣域網</h4>
<p>The WAN is used to connect network components that are geographically separated over vast distances together. An example of a WAN would be to connect an office in Los Angeles to another corporate office in New York.</p>
<p><span>WAN用於將地理位置遙遠的網絡組件連接在一起。 WAN的一個示例是將洛杉磯的辦公室連接到紐約的另一公司辦公室。</span></p>
<p>This can be done using virtual private networks (VPNs) over the Internet or using dedicated leased lines that would physically connect the city pairs together.</p>
<p><span lang="zh-TW">這可以通過Internet上的虛擬專用網絡（VPN）或使用將城市對實際連接在一起的專用租用線路來完成。</span></p>
<p>Regardless of the method of connection, once the two local area networks from Los Angeles and New York are connected, they become part of the larger wide area network topology.</p>
<p><br/><span lang="zh-TW">無論採用哪種連接方法，來自洛杉磯和紐約的兩個局域網一旦連接，它們便成為更大的廣域網拓撲的一部</span><span lang="zh-TW">分。</span></p>
<p style="text-align: center;"><span lang="zh-TW"><span class="image"><img class="popimg" id="_i_8" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image14.jpeg"/></span><span class="caption" lang=""></span></span></p>
<p id="N1078E" lang="" style="text-align: center;">Wide area network, metropolitan area network, and local area network. Image used under CC-BY-SA license from<span> </span><a href="https://commons.wikimedia.org/wiki/File:WAN.jpg" id="_i_9" lang="" target="_blank">Suwimon bunmak</a>.</p>
<p><br/><br/>Network Defined by Relationships<span lang="zh-TW">關係定義的網絡</span></p>
<p><span lang="zh-TW"><span>In addition to defining networks by geography or how much area they cover, you can also define them by the way they allocate their resources. The first method is what we call a client/server model. In a client/server model, a dedicated server or servers provide(s) access to files, scanners, printers, and other resources to client workstations. This simplifies the administration and backup burden, making the network centrally administered, and can provide better security because resources can be allocated according to job function, network privilege, or department, since all of the resources are located on a few key servers. The second way of sharing resources on the network is called the peer-to-peer model. In the peer-to-peer model, all workstations are considered equals: each computer or workstation shares its resources directly with the other workstations. There is no central administration. For example, if I shared my printer with my coworkers, then each time my coworker printed a document, it would be sent to the printer through my workstation. The drawback to this is that if my computer is turned off, my coworkers lose access to my resources, such as my printer. The administration and backup under the peer-to-peer model is much more difficult, since resources are located on numerous workstations across the network, making administrative tasks burdensome. Furthermore, there is no real way of securing network resources when allowing access between nodes or workstations. The benefit of peer-to-peer resource sharing is the low cost of entry, since no dedicated servers or specialized operating systems are required to share the resources.</span></span></p>
<p><span lang="zh-TW">除了按地理位置或網絡覆蓋範圍定義網絡外，您還可以通過分配資源的方式來定義網絡。第一種方法就是我們所說的客戶/服務器模型。在客戶端/服務器模型中，一個或多個專用服務器向客戶端工作站提供對文件，掃描儀，打印機和其他資源的訪問。由於所有資源都位於幾個關鍵服務器上，因此可以根據作業功能，網絡特權或部門分配資源，因此簡化了管理和備份負擔，使網絡可以集中管理，並且可以提供更好的安全性。在網絡上共享資源的第二種方法稱為對等模型。在對等模型中，所有工作站都被認為是相等的：每台計算機或工作站直接與其他工作站共享其資源。沒有中央管理。例如，如果我與同事共享打印機，那麼每次同事打印文檔時，該文檔都會通過工作站發送到打印機。這樣做的缺點是，如果關閉計算機，我的同事將無法訪問我的資源，例如打印機。對等模型下的管理和備份要困難得多，因為資源位於網絡上的眾多工作站上，這使管理任務變得很繁重。此外，當允許節點或工作站之間進行訪問時，沒有真正的方法來保護網絡資源。對等資源共享的好處是入門成本低，因為不需要專用服務器或專用操作系統來共享資源。</span></p>
<h3>Network Defined by Topology拓撲定義的網絡</h3>
<p><span>Besides geography and relationships, we can also define our networks by their topology. When we define our networks by their topology, we consider both the physical and logical topology, and both of these topologies do not have to match for a single network. The physical topology determines how the devices are physically connected, while the logical topology determines how the traffic flows across the network in a logical manner. There are many types of topologies, including bus, ring, star, full mesh, and hybrid. Currently, the most widely used model is a physical star and a logical bus topology using Ethernet.</span></p>
<p><span lang="zh-TW">除了地理和關係之外，我們還可以通過其拓撲定義網絡。當我們根據網絡的拓撲定義網絡時，我們會同時考慮物理和邏輯拓撲，並且這兩種拓撲都不必針對單個網絡進行匹配。物理拓撲決定了設備的物理連接方式，而邏輯拓撲決定了流量如何以邏輯方式流經網絡。拓撲類型很多，包括總線，環形，星形，全網格和混合拓撲。當前，使用最廣泛的模型是使用以太網的物理星形和邏輯總線拓撲。</span></p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<p><span title="Quick scroll up">Bus Topology</span>總線拓撲</p>
<p id="N106A2" lang="">Bus topology typically uses a single cable running through the area that needs network connectivity, with each device that wishes to connect to the network tapping into that cable. The devices tap into the cable using either a T connector (see diagram below) or a vampire tap. A vampire tap is actually a type of connection where a metal tooth bites into the cable, making a physical connection with the copper wire running inside the cable. While bus topology is an older technology and not commonly used anymore, physically, it can still be found as a logical implementation in some instances.</p>
<p lang=""><span lang="zh-TW">總線拓撲通常使用一根電纜穿過需要網絡連接的區域，每個希望連接到網絡的設備都通過該電纜連接。設備使用T型連接器（請參見下圖）或吸血鬼抽頭插入電纜。吸血鬼抽頭實際上是一種連接，其中金屬齒咬入電纜，與電纜內部的銅線進行物理連接。儘管總線拓撲是一項較舊的技術，在物理上已不再使用，但在某些情況下仍可以將其作為邏輯實現。</span></p>
<div class="imagewrap" style="text-align: center;"><span class="image"><img class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image15.png"/></span>
<p id="N106AA" lang="">Bus topology diagram. Image used under CC-BY-SA license from<span> </span><a href="https://commons.wikimedia.org/wiki/File:%3DBus-Topology.jpg#/media/File:%3DBus-Topology.jpg" id="_i_1" lang="" target="_blank">Nattydusadee</a>.</p>
<h4 style="text-align: left;"><span title="Quick scroll up">Ring Topology</span><span lang="zh-TW">環形拓撲</span></h4>
<p id="N106BC" lang="">Ring topology typically uses a cable running in a circular loop, with each device connected to the ring. Data travels in a single direction around the ring. The most common use of ring topology is with backbone fiber networks. Fiber distributed data interface (FDDI) is a set of standards for transmitting data on fiber-optic lines in a LAN. FDDI commonly uses two counter-rotating rings to provide more redundancy. Each device waits its turn to communicate on the ring by passing a token around the ring. Therefore, ring topology networks are also called token ring networks. As there are two counter-rotating rings, FDDI tends to provide a little more redundancy than a standard bus topology. However, both bus and ring topologies were quickly replaced in most LANs by the star topology.</p>
<p lang=""><span lang="zh-TW">環形拓撲通常使用以環形迴路運行的電纜，每個設備都連接到環形。數據在環上沿單個方向傳播。環形拓撲最常見的用途是與骨幹光纖網絡一起使用。光纖分佈式數據接口（FDDI）是用於在LAN中的光纖線上傳輸數據的一組標準。 FDDI通常使用兩個反向旋轉的環來提供更多的冗餘。每個設備都通過在令牌環周圍傳遞令牌來等待其在令牌環上進行通信。因此，環形拓撲網絡也稱為令牌環網絡。由於有兩個反向旋轉的環，因此FDDI傾向於提供比標準總線拓撲更多的冗餘。但是，在大多數LAN中，總線和環形拓撲都很快被星形拓撲取代。</span></p>
<div class="imagewrap" style="text-align: left;"><span class="image"><img class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image16.png"/></span>
<p id="N106C4" lang="">Ring topology diagram. Photo used under CC-BY-SA license from<span> </span><a href="https://upload.wikimedia.org/wikipedia/commons/2/2a/%3DRing_Topology.gif" id="_i_3" lang="" target="_blank">Marisa . pr</a>.</p>
<p style="text-align: left;"><span title="Quick scroll up">Star Topology<span>星型拓撲</span></span></p>
<p style="text-align: left;"><span title="Quick scroll up"><span>Star topology is by far the most common topology in use today. We find star topologies in use in nearly all local area networks. All the devices of the star topology connect to a single point. That single point of connection can be a hub or switch. In most modern networks, the single connection point will be a switch. Star topologies are the dominant physical topology today, although they are not always used as the logical topology. Ethernet cabling, also known as unshielded twisted-pair, is very commonly employed in local area networks using a star configuration. However, fiber-optic connections can also be used for high-speed or high-security networks. The downside with the star topology is that it creates a single point of failure. If a central device such as a switch fails, the entire network fails as well. Star topologies have the benefit of reduced expense and make expansion very easy, unlike bus and ring network varieties.</span></span></p>
<p style="text-align: left;"><span lang="zh-TW">星形拓撲是迄今為止使用的最常見的拓撲。我們發現幾乎所有局域網都使用星型拓撲。星型拓撲的所有設備都連接到一個點。單個連接點可以是集線器或交換機。在大多數現代網絡中，單個連接點將是一個交換機。星形拓撲是當今主要的物理拓撲，儘管它們並不總是用作邏輯拓撲。以太網電纜，也稱為非屏蔽雙絞線，在採用星形配置的局域網中非常普遍。但是，光纖連接也可以用於高速或高安全性網絡。星形拓撲的缺點是會造成單點故障。如果諸如交換機之類的中央設備發生故障，則整個網絡也會發生故障。與總線和環形網絡品種不同，星形拓撲結構具有減少費用並易於擴展的優勢。</span></p>
<p style="text-align: center;"><span lang="zh-TW"><span class="image"><img class="popimg" id="_i_4" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image17.png"/></span><span class="caption" lang=""></span></span></p>
<p id="N106DE" lang="" style="text-align: center;">Star topology diagram. Photo used under CC-BY-SA license from<span> </span><a href="https://upload.wikimedia.org/wikipedia/commons/8/82/%3DStar_topology.gif" id="_i_5" lang="" target="_blank">Marisa. pr</a>.</p>
<span title="Quick scroll up">Full Mesh Topology</span><span lang="zh-TW">全網狀拓撲</span></div>
<div class="imagewrap" style="text-align: left;">
<p id="N106F0" lang="">To deal with the issue of redundancy, the full mesh topology was created. This topology is by far the most redundant, and expensive, topology because every node or workstation in the network is directly connected to every other node. While this provides optimal routing, it is very expensive to maintain and operate. The number of connections required for any number of nodes can be calculated by using the formula, x = n(n-1)/2. For example, if you have six nodes, that would require 15 cables to connect them all to each other. If you had 50 nodes, that would require 1225 separate connections. You can certainly see why this topology is almost never used for local area networks, as the number of machines would drive the number of connections up too quickly.</p>
<p lang=""><span lang="zh-TW">為了解決冗餘問題，創建了全網狀拓撲。到目前為止，此拓撲是最冗餘，最昂貴的拓撲，因為網絡中的每個節點或工作站都直接連接到每個其他節點。儘管這提供了最佳的路由，但維護和操作非常昂貴。可以使用公式x = n（n-1）/ 2計算任意數量的節點所需的連接數。例如，如果您有六個節點，則需要15條電纜才能將它們彼此連接。如果您有50個節點，則需要1225個單獨的連接。您當然可以看到為什麼幾乎不將該拓撲用於局域網的原因，因為計算機數量過多會導致連接數量增加過快。</span></p>
<span class="image"><img class="popimg" id="_i_6" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image18.png"/></span>
<p id="N106F8" lang="">Photo used under CC-BY-SA license from<span> </span><a href="https://upload.wikimedia.org/wikipedia/commons/8/82/%3DStar_topology.gif" id="_i_7" lang="" target="_blank">Marisa. pr</a>.</p>
<h4 style="text-align: left;"><span title="Quick scroll up">Partial Mesh Topology</span><span lang="zh-TW">部分網格拓撲</span></h4>
<p style="text-align: left;"><span lang="zh-TW"><span>To solve the cost issues created by the full mesh topology, engineers created the partial mesh topology. Partial mesh topology is really a hybrid full mesh topology. It provides redundancy and optimal routing between some sites, while avoiding the expense of connecting every single site. In order to create this successfully, though, you must consider the network traffic patterns to design it efficiently.</span></span></p>
<p style="text-align: left;"><span lang="zh-TW">為了解決由全網格拓撲創建的成本問題，工程師創建了部分網格拓撲。部分網狀拓撲實際上是混合全網狀拓撲。它提供了某些站點之間的冗餘和最佳路由，同時避免了連接每個站點的開銷。但是，為了成功創建它，必須考慮網絡流量模式以進行有效設計。</span></p>
<div class="examplewrap">
<div class="exHead"><span class="scnReader">EXAMPLE</span></div>
<div class="example clearfix">
<h5></h5>
<div>
<p id="N1070F" lang="">If we have two sites which are very busy, such as Los Angeles, CA and New York, NY, we may want to provide them with additional redundancy by connecting them to a third city, such as Washington, DC. But a slower site, maybe somewhere like Greenville, SC, might only need to be connected to one of those three sites and can then use that as a jumping off point to connect to the other two sites. This works very similar to our air travel system, where we connect the large cities together directly, and we avoid direct flights to small cities. For example, if someone wanted to fly from Greenville to Los Angeles they would first take a flight from Greenville to Washington DC, then a direct flight on a larger plane to Los Angeles from Washington.</p>
<p lang=""><span lang="zh-TW">如果我們有兩個非常繁忙的站點，例如加利福尼亞州的洛杉磯和紐約州的紐約，我們可能希望通過將它們連接到第三個城市（例如華盛頓特區）為他們提供更多的冗餘。但是，速度較慢的站點（例如，南卡羅來納州格林維爾）可能只需要連接到這三個站點之一，然後就可以將其用作連接其他兩個站點的起點。這與我們的航空旅行系統非常相似，在航空旅行系統中，我們將大城市直接連接在一起，並且避免了直接飛往小城市的航班。例如，如果有人想從格林維爾飛往洛杉磯，他們會先從格林維爾飛往華盛頓特區，然後再乘較大的飛機直接從華盛頓飛往洛杉磯。</span></p>
</div>
</div>
</div>
<p lang="">The same concept applies in a partial mesh topology. Partial mesh adds additional resources (connections) between the biggest and busiest sites, while still providing the smaller sites with minimal service to one of the large hub sites. The smaller site uses the large hub as a jumping off point to the rest of the network.</p>
<p lang=""><span lang="zh-TW">相同的概念適用於部分網格拓撲。部分網狀網絡在最大和最繁忙的站點之間增加了額外的資源（連接），同時仍然為大型樞紐站點之一提供較小的站點，但服務卻最少。較小的站點將大型集線器用作連接到網絡其餘部分的起點。</span></p>
<div class="imagewrap"><span class="image"><img class="popimg" id="_i_8" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image19.png"/></span>
<p id="N1071B" lang="">Mesh network topology diagram. Public domain image obtained from<span> </span><a href="https://commons.wikimedia.org/wiki/File:NetworkTopology-Mesh.png" id="_i_9" lang="" target="_blank">Wikimedia Commons</a>.</p>
</div>
<span class="image"><img class="popimg" id="_i_10" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH09/webcontent/PCH09/image20.png"/></span>
<p id="N10729" lang="">Diagram of multiple classifications of network topologies. Public domain image obtained from<span> </span><a href="https://commons.wikimedia.org/wiki/File:NetworkTopologies.png" id="_i_11" lang="" target="_blank">Maksim</a>.</p>
<h1>HW2</h1>
<p><a href="https://www.kaggle.com/mdecourse/cp2020-hw2">https://www.kaggle.com/mdecourse/cp2020-hw2</a></p>
<p>先從網站上抓取班級名單</p>
<p>import urllib.request<br/>target_url = "https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776"<br/>cp1b = []<br/>for line in urllib.request.urlopen(target_url):<br/>  cp1b.append(line.decode('utf-8'))<br/>print(cp1b)</p>
<p></p>
<p><span>from random import shuffle #random(亂數) #shuffle</span></p>
<p><span>將下列每組數字從新排列<br/>list = [40523138, 40523148, 40723217, 40728238, 40823148, 40823152, 40923201, 40923202, 40923203, 40923204, 40923205, 40923206, 40923207, 40923208, 40923209, 40923210, 40923211, 40923212, 40923213, 40923214, 40923216, 40923217, 40923218, 40923219, 40923220, 40923221, 40923223, 40923224, 40923225, 40923226, 40923227, 40923228, 40923229, 40923230, 40923231, 40923232, 40923233, 40923234, 40923235, 40923236, 40923237, 40923238, 40923239, 40923240, 40923241, 40923242, 40923243, 40923244, 40923245, 40923246, 40923247, 40923248, 40923249, 40923250, 40923251, 40923252, 40923253]<br/>shuffle(list)<br/>n = 5<br/>m = int(len(list)/n)<br/>list2 = []<br/>for i in range(0, len(list),m):<br/>    list2.append(list[i:i+m])<br/>print(list2)<br/></span></p>
<p><span><br/>&gt;&gt;&gt;[[40923211, 40923242, 40923239, 40923250, 40923253, 40923210, 40923226, 40923240, 40923243, 40923225, 40923219], [40923218, 40923251, 40523148, 40923208, 40923214, 40923213, 40923207, 40523138, 40923224, 40823152, 40923232], [40923249, 40923234, 40923252, 40923245, 40923221, 40923203, 40923220, 40923205, 40923206, 40923238, 40923212], [40923228, 40923209, 40923204, 40923231, 40923216, 40823148, 40923244, 40923233, 40923246, 40923237, 40923230], [40923202, 40923223, 40923236, 40923247, 40923229, 40923201, 40728238, 40723217, 40923217, 40923227, 40923241], [40923248, 40923235]]</span></p>
<h4></h4>
<p></p><h1>HW3</h1>
<p><a href="https://www.kaggle.com/a40923226/cp2020-hw3/edit?rvi=1">https://www.kaggle.com/a40923226/cp2020-hw3/edit?rvi=1</a></p>
<ul>
<li>
<h5>Keep the game going until the user types “exit”繼續遊戲，直到用戶鍵入“退出”</h5>
</li>
<li>
<h5>Keep track of how many guesses the user has taken, and when the game ends, print this out.跟踪用戶進行了多少猜測，當遊戲結束時，將其打印出來。</h5>
</li>
</ul><h2>Exercise 9 Guessing game one</h2>
<ul>
<li>
<h5>Keep the game going until the user types “exit”繼續遊戲，直到用戶鍵入“退出”</h5>
</li>
<li>
<h5>Keep track of how many guesses the user has taken, and when the game ends, print this out.跟踪用戶進行了多少猜測，當遊戲結束時，將其打印出來。</h5>
</li>
</ul>
<h3>Discussion討論</h3>
<p><br/><span lang="zh-TW">Random Numbers (and Modules)隨機數（和模塊）</span></p>
<ul>
<li>
<h5>Modules模組</h5>
</li>
<li>
<h5>Random numbers隨機數</h5>
</li>
<li>
<h5>User input用戶輸入</h5>
<h5></h5>
</li>
</ul>
<p>This is your first exposure to using Python code that somebody else wrote. In Python, these formally-distributed code packages are called<span> </span><em>modules</em>. The thing we want from a module in this exercise is the ability to generate random numbers. This comes from the<span> </span><em>random</em><span> </span>module.</p>
<p>To use a module, at the top of your file, type</p>
<p><span lang="zh-TW">這是您第一次使用別人編寫的Python代碼。在Python中，這些正式分發的代碼包稱為模塊。在本練習中，我們希望從模塊獲得的是生成隨機數的能力。這來自隨機模塊。 要使用模塊，請在文件頂部鍵入</span></p>
<pre><span style="color: #ff0000;"><code class="language-python" data-lang="python"><span class="kn">[import</span> <span class="nn">random]<br/><span style="color: #000000;">This means you are allowing your Python program to use a module called <code class="highlighter-rouge">random</code> in the <br/>rest of your code.<br/></span><span style="color: #000000;">这意味着您允许 Python 程序在代码的其余部分使用称为随机的模块。<br/><br/>To use it (and generate a random integer), now type:<br/>要使用它（並生成随機整数），請键入：<br/></span></span></code></span></pre></div></div></div>
<pre><span style="color: #ff0000;"><code class="language-python" data-lang="python"><span class="n">[a</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">)]<br/></span></code></span></pre>
<pre><span style="color: #ff0000;"><code class="language-python" data-lang="python"><span class="nn"><span style="color: #000000;">Once you run this program, the variable a will have a random integer that the computer <br/>made for you, between 2 and 6 (including 2 and 6). The specific documentation for this <br/>method is here.<br/>運行此程序后，變量 a 将有一个随機整数，計算機為您制作的 2 和 6（包括 2 和 6）。此方法的特定文<br/>檔位於此處。<br/>There are many ways you can generate random numbers - integers, decimals, and much <br/>more. The Python documentation has much more detailed information about what is <br/>possiblefrom the random module.<br/>有許多方法可以生成随機數 - 整數、小數等。Python 文档包含有關随機模塊中可能實現哪些内容的詳细信<br/>息。<br/><br/></span><br/></span></code></span></pre><h3>solution解決方法</h3>
<p></p>
<pre>def list_ends(a_list):
    return [a_list[0], a_list[len(a_list)-1]]</pre>
<p><span></span></p>
<h5 id="happy-coding">Happy coding!編碼愉快</h5>
<pre><br/><br/><br/></pre>
<pre><br/><br/></pre>
<pre><span></span></pre><h2>Exercise 12 List Ends</h2>
<p><span>Write a program that takes a list of numbers (for example, </span><code class="highlighter-rouge">a = [5, 10, 15, 20, 25]</code><span>) and makes a new list of only the first and last elements of the given list. For practice, write this code inside a function.</span></p>
<p><span lang="zh-TW">編寫一個程序，該程序接受一個數字列表（例如，a = [5、10、15、20、25]），並僅給出給定列表的第一個和最後一個元素組成一個新列表。為了練習，請在函數內編寫此代碼。</span></p>
<p><br/><br/></p>
<h3>Concepts to practice練習概念</h3>
<p><br/><span lang="zh-TW"></span></p>
<ul>
<li>
<h5>Lists and properties of lists<span>列表和列表屬性</span></h5>
</li>
<li>
<h5>List comprehensions <span>列表理解</span></h5>
</li>
<li>
<h5>Functions功能</h5>
</li>
</ul><h3>solution解決方法</h3><h2>Exercise 13 Fibonacci</h2>
<h5><span>Write a program that asks the user how many Fibonnaci numbers to generate and then generates them. Take this opportunity to think about how you can use functions. Make sure to ask the user to enter the number of numbers in the sequence to generate.(</span><em>Hint: The Fibonnaci seqence is a sequence of numbers where the next number in the sequence is the sum of the previous two numbers in the sequence. The sequence looks like this: 1, 1, 2, 3, 5, 8, 13, …</em><span>)</span></h5>
<h5><span lang="zh-TW">編寫一個程序，詢問用戶要生成多少斐波那契數字，然後生成它們。藉此機會考慮如何使用功能。確保要求用戶輸入要生成的序列中的數字。（提示：Fibonnaci序列是一個數字序列，其中序列中的下一個數字是序列中前兩個數字的和。該序列看起來像這樣：1，1，2，3，5，8，13，…）</span></h5><h3>Discussion討論區</h3>
<p>Practice functions!練習功能！</p><h3>solution解決方法</h3>
<p><span>There are so many ways that you can use functions to generate Fibonacci numbers. Here is one user-submitted solution</span>您可以通過多種方式使用函數來生成斐波那契數。 這是用戶提交的一種解決方案：</p>
<p></p>
<pre>def gen_fib():
    count = int(input("How many fibonacci numbers would you like to generate? "))
    i = 1
    if count == 0:
        fib = []
    elif count == 1:
        fib = [1]
    elif count == 2:
        fib = [1,1]
    elif count &gt; 2:
        fib = [1,1]
        while i &lt; (count - 1):
            fib.append(fib[i] + fib[i-1])
            i += 1

    return fib
        <br/><br/><span>And another另一種解:<br/></span></pre>
<pre>def fibonacci():
    num = int(input("How many numbers that generates?:"))
    i = 1
    if num == 0:
        fib = []
    elif num == 1:
        fib = [1]
    elif num == 2:
        fib = [1,1]
    elif num &gt; 2:
        fib = [1,1]
        while i &lt; (num - 1):
            fib.append(fib[i] + fib[i-1])
            i += 1
    return fib
print(fibonacci())
input()<br/><br/><span>This solution is using what is called the “iterative” method of computing Fibonacci <br/>numbers. This means you use some kind of loop to keep adding numbers together to <br/>get the next number.<br/>該解決方案使用了所謂的計算斐波納契數的“迭代”方法。 這意味著您使用某種循環來將數字加在一起以<br/>獲得下一個數字。<br/>An alternative way of computing Fibonacci numbers is to use <em>recursion</em><span>, or calling <br/>the same function over and over in a special way, to compute the Fibonacci numbers.<br/>We will talk about this in a future exercise.<br/>計算斐波那契數的另一種方法是使用遞歸，或以一種特殊方式一遍又一遍地調用相同的函數來計算斐波<br/>那契數。 我們將在以後的練習中討論這一點。</span></span></pre>
<pre><span></span></pre>
<h5><span lang="zh-TW"></span></h5>